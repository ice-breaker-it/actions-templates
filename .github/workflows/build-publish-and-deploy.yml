name: Deploy

on:
  workflow_call:
    inputs:
      service_name:
        type: string
        required: true
      tag_name:
        type: string
        required: true
    secrets:
      aws_access_key_id:
        required: true
      aws_secret_access_key:
        required: true
      aws_region:
        required: true
      ecr:
        required: true


jobs:
  build-and-publish:
    if: startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/tags/rc-')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build and package
        run: |
          mvn clean install -DskipTests -Dopenapi.generator.skip=true
          mvn package -DskipTests
        shell: bash

      - name: Docker build and publish
        uses: ice-breaker-it/actions-templates/.github/actions/docker-build-and-publish@main
        with:
          image_name: ice-breaker/${{ inputs.service_name }}
          tag_name: ${{ inputs.tag_name }}
          aws_access_key_id: ${{ secrets.aws_access_key_id }}
          aws_secret_access_key: ${{ secrets.aws_secret_access_key }}
          aws_region: ${{ secrets.aws_region }}
          ecr: ${{ secrets.ecr }}

  deploy-test:
    if: startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/tags/rc-')
    runs-on: ubuntu-latest
    needs: build-and-publish
    environment: test
    steps:
      - name: Deploy to test
        uses: ice-breaker-it/actions-templates/.github/actions/deploy-ecs@main
        with:
          image: ${{ secrets.ecr }}/ice-breaker/${{ inputs.service_name }}:${{ inputs.tag_name }}
          service_name: ${{ inputs.service_name }}
          aws_access_key_id: ${{ secrets.aws_access_key_id }}
          aws_secret_access_key: ${{ secrets.aws_secret_access_key }}
          aws_region: ${{ secrets.aws_region }}
          environment: test

  deploy-prod:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: deploy-test
    environment: test
    steps:
      - name: Deploy to prod
        uses: ice-breaker-it/actions-templates/.github/actions/deploy-ecs@main
        with:
          image: ${{ secrets.ecr }}/ice-breaker/${{ inputs.service_name }}:${{ inputs.tag_name }}
          service_name: ${{ inputs.service_name }}
          aws_access_key_id: ${{ secrets.aws_access_key_id }}
          aws_secret_access_key: ${{ secrets.aws_secret_access_key }}
          aws_region: ${{ secrets.aws_region }}
          environment: prod
